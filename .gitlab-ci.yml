image: 'debian:bullseye'

before_script:
  - apt-get update
  # Runtime dependencies
  - apt-get -y install python3-django
  - apt-get -y install python3-requests python3-django-jsonfield python3-django-captcha python3-debian python3-debianbts python3-apt python3-yaml python3-bs4 python3-pyinotify python3-gpg python3-django-debug-toolbar python3-edlib
  # Test dependencies
  - apt-get -y install python3-coverage python3-selenium python3-responses chromium-driver python3-pip postgresql postgresql-client python3-psycopg2
  # Dependencies to build docs
  - apt-get -y install make python3-sphinx python3-sphinx-rtd-theme
  - export LANG=C

flake8:
  script:
    - pip3 install --upgrade flake8  # Ensure we have the latest version
    - python3 -m flake8 django_email_accounts/ functional_tests/ distro_tracker/
  except:
    - schedules

unit-tests:
  script:
    - service postgresql start || true
    - su - postgres -c "createuser -d root"
    - python3 -m coverage erase
    - python3 -m coverage run -p ./manage.py test django_email_accounts distro_tracker
    - USE_PG=1 python3 -m coverage run -p ./manage.py test django_email_accounts distro_tracker
    - python3 -m coverage combine
    - python3 -m coverage report | sed -e 's/^TOTAL         /TOTAL COVERAGE/'
    - service postgresql stop || true
  coverage: '/TOTAL COVERAGE.* (\d+(?:\.\d+)?%)/'
  artifacts:
    paths:
      - .coverage
    when: always
    expire_in: 6h
  except:
    - schedules

functional-tests:
  # We have to run the tests as user nobody as chromium will not run as root
  script:
    - chown nobody data  # Grant write rights to user nobody
    - runuser -u nobody python3 ./manage.py test functional_tests
  after_script:
    - chown root data
  except:
    - schedules

pages:
  stage: deploy
  dependencies:  # To retrieve .coverage artifact
    - unit-tests
  script:
    - make -C docs html
    - mv docs/_build/html/ public/
    - python3 -m coverage html -d public/coverage
  when: always
  artifacts:
    paths:
      - public
  only:
    refs:
      - master
    variables:
      # Build the documentation only in the official repository, not in forks
      - $CI_PROJECT_PATH == "qa/distro-tracker"
  except:
    - schedules

sample-database:
  only:
    - schedules
  script:
    - cp distro_tracker/project/settings/local.py.sample-debian-dev distro_tracker/project/settings/local.py
    - python3 manage.py migrate
    - python3 manage.py loaddata distro_tracker/core/fixtures/sample-database-repositories.xml
    - python3 manage.py tracker_update_repositories
  artifacts:
    paths:
      - data/distro-tracker.sqlite
    expire_in: 1 weeks
