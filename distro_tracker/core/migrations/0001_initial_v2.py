# Generated by Django 3.2.20 on 2023-08-19 16:25

import distro_tracker.core.models
import distro_tracker.core.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    replaces = [
        ('core', '0001_initial'),
        ('core', '0004_longer_version'),
        ('core', '0005_uri_as_char_field'),
        ('core', '0008_drop-release-goals'),
        ('core', '0009_unique_constraint_on_subscriptions'),
        ('core', '0010_drop_priority_section_on_source_package'),
        ('core', '0011_sourcepackagerepositoryentry_component'),
        ('core', '0012_rename_packageextractedinfo_packagedata'),
        ('core', '0013_packagedata_to_package_related_name'),
        ('core', '0014_taskdata'),
        ('core', '0015_delete_runningjob'),
        ('core', '0017_increase_max_length_on_version'),
        ('core', '0018_big_auto_fields'),
        ('core', '0019_auto_20230731_2032'),
    ]

    dependencies = [
        ('django_email_accounts', '0001_initial_v2'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.TextField(max_length=100, unique=True)),
                ('full_description_template', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Architecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContributorName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60)),
                ('contributor_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_email_accounts.useremail')),
            ],
            options={
                'unique_together': {('contributor_email', 'name')},
            },
        ),
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MailingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('archive_url_template', models.CharField(max_length=255, validators=[distro_tracker.core.models.validate_archive_url_template])),
            ],
        ),
        migrations.CreateModel(
            name='PackageName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('source', models.BooleanField(default=False)),
                ('binary', models.BooleanField(default=False)),
                ('pseudo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('shorthand', models.CharField(max_length=10, unique=True)),
                ('uri', models.CharField(max_length=200, verbose_name='URI')),
                ('public_uri', models.URLField(blank=True, verbose_name='public URI')),
                ('suite', models.CharField(max_length=50)),
                ('codename', models.CharField(blank=True, max_length=50)),
                ('components', distro_tracker.core.utils.SpaceDelimitedTextField()),
                ('default', models.BooleanField(default=False)),
                ('optional', models.BooleanField(default=True)),
                ('binary', models.BooleanField(default=True)),
                ('source', models.BooleanField(default=True)),
                ('position', models.IntegerField(default=0)),
                ('architectures', models.ManyToManyField(blank=True, to='core.Architecture')),
            ],
            options={
                'verbose_name_plural': 'repositories',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='SourcePackage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=200)),
                ('standards_version', models.CharField(blank=True, max_length=550)),
                ('dsc_file_name', models.CharField(blank=True, max_length=255)),
                ('directory', models.CharField(blank=True, max_length=255)),
                ('homepage', models.URLField(blank=True, max_length=255)),
                ('vcs', models.JSONField(null=True)),
                ('architectures', models.ManyToManyField(blank=True, to='core.Architecture')),
                ('maintainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_package', to='core.contributorname')),
                ('uploaders', models.ManyToManyField(related_name='source_packages_uploads_set', to='core.ContributorName')),
            ],
        ),
        migrations.CreateModel(
            name='TaskData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=250, unique=True)),
                ('task_is_pending', models.BooleanField(default=False)),
                ('run_lock', models.DateTimeField(default=None, null=True)),
                ('last_attempted_run', models.DateTimeField(default=None, null=True)),
                ('last_completed_run', models.DateTimeField(default=None, null=True)),
                ('data', models.JSONField(default=dict)),
                ('data_checksum', models.CharField(default=None, max_length=40, null=True)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='Used in the URL (/teams/<em>identifier</em>/) and in the associated email address team+<em>identifier</em>@<em>domain</em>.', unique=True, verbose_name='Identifier')),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
                ('public', models.BooleanField(default=True)),
                ('maintainer_email', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_email_accounts.useremail')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muted', models.BooleanField(default=False)),
                ('has_membership_keywords', models.BooleanField(default=False)),
                ('default_keywords', models.ManyToManyField(to='core.Keyword')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_membership_set', to='core.team')),
                ('user_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_set', to='django_email_accounts.useremail')),
            ],
            options={
                'unique_together': {('user_email', 'team')},
            },
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(related_name='teams', through='core.TeamMembership', to='django_email_accounts.UserEmail'),
        ),
        migrations.AddField(
            model_name='team',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_teams', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='team',
            name='packages',
            field=models.ManyToManyField(related_name='teams', to='core.PackageName'),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('_use_user_default_keywords', models.BooleanField(default=True)),
                ('_keywords', models.ManyToManyField(to='core.Keyword')),
                ('email_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.emailsettings')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.packagename')),
            ],
            options={
                'unique_together': {('email_settings', 'package')},
            },
        ),
        migrations.CreateModel(
            name='SourcePackageRepositoryEntry',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('component', models.CharField(blank=True, max_length=50)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_entries', to='core.repository')),
                ('source_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repository_entries', to='core.sourcepackage')),
            ],
            options={
                'unique_together': {('source_package', 'repository')},
            },
        ),
        migrations.AddField(
            model_name='repository',
            name='source_packages',
            field=models.ManyToManyField(through='core.SourcePackageRepositoryEntry', to='core.SourcePackage'),
        ),
        migrations.AddField(
            model_name='packagename',
            name='subscriptions',
            field=models.ManyToManyField(through='core.Subscription', to='core.EmailSettings'),
        ),
        migrations.CreateModel(
            name='PackageBugStats',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('stats', models.JSONField(default=dict)),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bug_stats', to='core.packagename')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content_type', models.CharField(default='text/plain', max_length=100)),
                ('_db_content', models.TextField(blank=True, null=True)),
                ('news_file', models.FileField(blank=True, upload_to=distro_tracker.core.models.news_upload_path)),
                ('created_by', models.CharField(blank=True, max_length=100)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.packagename')),
                ('signed_by', models.ManyToManyField(related_name='signed_news_set', to='core.ContributorName')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_key', models.CharField(max_length=40, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teammembership')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='emailsettings',
            name='default_keywords',
            field=models.ManyToManyField(to='core.Keyword'),
        ),
        migrations.AddField(
            model_name='emailsettings',
            name='user_email',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='django_email_accounts.useremail'),
        ),
        migrations.CreateModel(
            name='BinaryPackage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=200)),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('long_description', models.TextField(blank=True)),
                ('source_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sourcepackage')),
            ],
        ),
        migrations.CreateModel(
            name='BinaryPackageName',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.packagename',),
        ),
        migrations.CreateModel(
            name='EmailNews',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.news',),
        ),
        migrations.CreateModel(
            name='PseudoPackageName',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.packagename',),
        ),
        migrations.CreateModel(
            name='SourcePackageName',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.packagename',),
        ),
        migrations.AddField(
            model_name='sourcepackage',
            name='binary_packages',
            field=models.ManyToManyField(blank=True, to='core.BinaryPackageName'),
        ),
        migrations.AddField(
            model_name='sourcepackage',
            name='source_package_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_package_versions', to='core.sourcepackagename'),
        ),
        migrations.CreateModel(
            name='RepositoryRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('derivative', 'Derivative repository (target=parent)'), ('overlay', 'Overlay of target repository')], max_length=50)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='core.repository')),
                ('target_repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_relations', to='core.repository')),
            ],
            options={
                'unique_together': {('repository', 'name')},
            },
        ),
        migrations.CreateModel(
            name='RepositoryFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('hidden', 'Hidden repository')], max_length=50)),
                ('value', models.BooleanField(default=False)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='core.repository')),
            ],
            options={
                'unique_together': {('repository', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PackageData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50)),
                ('value', models.JSONField(default=dict)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='core.packagename')),
            ],
            options={
                'unique_together': {('key', 'package')},
            },
        ),
        migrations.CreateModel(
            name='MembershipPackageSpecifics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_has_keywords', models.BooleanField(default=False)),
                ('muted', models.BooleanField(default=False)),
                ('keywords', models.ManyToManyField(to='core.Keyword')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_package_specifics', to='core.teammembership')),
                ('package_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.packagename')),
            ],
            options={
                'unique_together': {('membership', 'package_name')},
            },
        ),
        migrations.CreateModel(
            name='ExtractedSourceFile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('extracted_file', models.FileField(upload_to=distro_tracker.core.models._extracted_source_file_upload_path)),
                ('name', models.CharField(max_length=100)),
                ('date_extracted', models.DateTimeField(auto_now_add=True)),
                ('source_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_source_files', to='core.sourcepackage')),
            ],
            options={
                'unique_together': {('source_package', 'name')},
            },
        ),
        migrations.CreateModel(
            name='BinaryPackageRepositoryEntry',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('priority', models.CharField(blank=True, max_length=50)),
                ('section', models.CharField(blank=True, max_length=50)),
                ('architecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.architecture')),
                ('binary_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repository_entries', to='core.binarypackage')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='binary_entries', to='core.repository')),
            ],
            options={
                'unique_together': {('binary_package', 'repository', 'architecture')},
            },
        ),
        migrations.CreateModel(
            name='BinaryPackageBugStats',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('stats', models.JSONField(default=dict)),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='binary_bug_stats', to='core.binarypackagename')),
            ],
        ),
        migrations.AddField(
            model_name='binarypackage',
            name='binary_package_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='binary_package_versions', to='core.binarypackagename'),
        ),
        migrations.CreateModel(
            name='ActionItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('short_description', models.TextField()),
                ('severity', models.IntegerField(choices=[(0, 'wishlist'), (1, 'low'), (2, 'normal'), (3, 'high'), (4, 'critical')], default=2)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('last_updated_timestamp', models.DateTimeField(auto_now=True)),
                ('extra_data', models.JSONField(default=dict)),
                ('item_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_items', to='core.actionitemtype')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_items', to='core.packagename')),
            ],
            options={
                'unique_together': {('package', 'item_type')},
            },
        ),
        migrations.CreateModel(
            name='SourcePackageDeps',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('build_dep', models.BooleanField(default=False)),
                ('binary_dep', models.BooleanField(default=False)),
                ('details', models.JSONField(default=dict)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.repository')),
                ('dependency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_dependents', to='core.sourcepackagename')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_dependencies', to='core.sourcepackagename')),
            ],
            options={
                'unique_together': {('source', 'dependency', 'repository')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='sourcepackage',
            unique_together={('source_package_name', 'version')},
        ),
        migrations.AlterUniqueTogether(
            name='binarypackage',
            unique_together={('binary_package_name', 'version')},
        ),
    ]
